\section*{Сортировка вставками}

Рассмотрим реализацию алгоритма сортировки одномерного массива методом вставок.

<<insertionSort.py>>=
def insertion_sort(arr):
    <<Основной цикл>>
@

Создаём цикл, проходящий по массиву arr, начиная со второго элемента, так как считается, что первый элемент уже отсортирован

<<Основной цикл>>=
for i in range(1, len(arr)):
    <<Сохранение текущего элемента>>
    <<Сохранение индекса предыдущего числа>>
    <<Поиск позиции для вставки>>
    <<Вставка элемента>>
@

Сохраним число из массива с индексом \texttt{i} в переменную \texttt{item}.

<<Сохранение текущего элbreемента>>=
item = arr[i]
@

Сохраним индекса предыдущего числа в переменную \texttt{j}

<<Сохранение индекса предыдущего числа>>=
j = i - 1
@

С помощью цикла \texttt{while} находим такую позицию в массиве, при которой число в переменной \texttt{item} будет меньше чем \texttt{arr[j]}.

<<Поиск позиции для вставки>>=
while j >= 0 and arr[j] > item:
    <<Сдвиг элементов в массиве>>
    j -= 1
@

При каждой итерации цикла \texttt{while} сдвигаем элемент массива с индексом \texttt{j} на одну позиции вперёд.

<<Сдвиг элементов в массиве>>=
arr[j + 1] = arr[j]
@

Производим вставку элемента в массив по индексу \texttt{j + 1}

<<Вставка элемента>>=
arr[j + 1] = item
@

\footnote{Разработал Ворожейкин Д.А. ИКБО-01-19}